//sourceSets {
//    packageTest {
//        compileClasspath += sourceSets.main.output
//        runtimeClasspath += sourceSets.main.output
//    }
//}
//
//configurations {
//    packageTestImplementation.extendsFrom implementation
//    packageTestRuntimeOnly.extendsFrom runtimeOnly
//}
repositories {
    mavenCentral()
}

dependencies {
    implementation project(path: ':core')
    testImplementation 'junit:junit:4.13'
}

task testDesktop(type: Test) {
    // trick gradle into always running this :/
    inputs.dir("src")
    outputs.upToDateWhen { false }

    useJUnit()

    maxHeapSize = '1G'
    workingDir = project(":").rootDir

    filter {
        includeTestsMatching "de.tobifleig.lxc.packaging.DesktopReleaseTest"
    }

    dependsOn ":releaseDesktop"
    mustRunAfter ":releaseDesktop"
}

task testProdUpdate(type: Test) {
    // trick gradle into always running this :/
    inputs.dir("src")
    outputs.upToDateWhen { false }

    useJUnit()

    maxHeapSize = '1G'
    workingDir = project(":").rootDir

    filter {
        includeTestsMatching "de.tobifleig.lxc.packaging.release.UpdateTest"
    }

    dependsOn ":packUpdateProd"
    mustRunAfter ":packUpdateProd"
}

// this one is special, run testDesktop first. Then increment the version number in the main class. Then run this.
task testTestUpdate(type: Test) {
    // trick gradle into always running this :/
    inputs.dir("src")
    outputs.upToDateWhen { false }

    useJUnit()

    maxHeapSize = '1G'
    workingDir = project(":").rootDir

    filter {
        includeTestsMatching "de.tobifleig.lxc.packaging.testkeys.UpdateTest"
    }

    dependsOn ":packUpdateTest"
    mustRunAfter ":packUpdateTest"
}